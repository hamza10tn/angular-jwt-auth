{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentification-service.service\";\nexport class AuthentificationGuardService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    if (this.authService._is_logged()) {\n      return true;\n    }\n    return false;\n  }\n  static {\n    this.ɵfac = function AuthentificationGuardService_Factory(t) {\n      return new (t || AuthentificationGuardService)(i0.ɵɵinject(i1.AuthentificationService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthentificationGuardService,\n      factory: AuthentificationGuardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthentificationGuardService","constructor","authService","canActivate","route","state","_is_logged","i0","ɵɵinject","i1","AuthentificationService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\Desktop\\4TWIN2K24\\angular\\Nouveau dossier\\AuthGuard\\src\\app\\services\\authentification.guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthentificationService } from './authentification-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthentificationGuardService {\n  constructor(private authService: AuthentificationService) {\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean\n      | UrlTree> | boolean | UrlTree {\n    if (this.authService._is_logged()) {\n      return true\n    } return false;\n  }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,4BAA4B;EACvCC,YAAoBC,WAAoC;IAApC,KAAAA,WAAW,GAAXA,WAAW;EAC/B;EACAC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;;IACX,OAAO,KAAK;EAChB;;;uBAVWN,4BAA4B,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,uBAAA;IAAA;EAAA;;;aAA5BV,4BAA4B;MAAAW,OAAA,EAA5BX,4BAA4B,CAAAY,IAAA;MAAAC,UAAA,EAF3B;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}